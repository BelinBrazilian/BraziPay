name: Code Quality

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  code-quality:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: brazipay
          POSTGRES_USER: sail
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -U sail"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, curl, dom, pdo_pgsql, pgsql
          tools: composer

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-cache

      - name: Check for vulnerabilities
        run: composer audit || echo "Vulnerabilities found"

      - name: Setup environment
        run: |
          cp .env.example .env
          php artisan key:generate
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: brazipay
          DB_USERNAME: sail
          DB_PASSWORD: password

      - name: Clear configuration cache
        run: php artisan config:clear

      - name: Run database migrations
        run: php artisan migrate --force
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: brazipay
          DB_USERNAME: sail
          DB_PASSWORD: password

      - name: Run Laravel Pint
        run: vendor/bin/pint --test

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse app bootstrap config database lang resources routes tests --memory-limit=1G

      - name: Run tests
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: brazipay
          DB_USERNAME: sail
          DB_PASSWORD: password
        run: vendor/bin/pest

      - name: Run Snyk Dependency Scan
        uses: snyk/actions/php@master
        env:
          SNYK_TOKEN: '58d74067-9602-4238-9654-3584df5d67c3'

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs

  notify-failure:
    runs-on: ubuntu-latest
    needs: code-quality
    if: failure()
    steps:
      - name: Send Discord Notification
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"⚠️ Workflow Failed: \`Code Quality\`\n- Job: \`notify-failure\`\n- Branch: \`${{ github.ref_name }}\`\n- Commit: \`${{ github.sha }}\`\nCheck the logs: \`${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\`\"}" \
          https://discord.com/api/webhooks/1311038258129403944/0HIIXxAm0tdNgRVrVh38w9_abuw9fezJwrkx7-W5Tn_dkftgaKGTxjCYDq6yojWGPj9E
